/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package scoreboard;

import java.awt.Desktop;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Alejo
 */
public class Scoreboard extends javax.swing.JFrame {

    //Initialize variables
    List<Player> playerList = new ArrayList<>();

    String player1, player2, sponsor1, sponsor2, round;

    File outputFolder = new File("C:\\Scoreboard\\Resources\\Output");
    File inputFolder = new File("C:\\Scoreboard\\Resources\\Input");

    public File playersFile = new File("C:\\Scoreboard\\Resources\\Input\\players.csv");

    File p1File = new File("C:\\Scoreboard\\Resources\\Output\\player1.txt");
    File p2File = new File("C:\\Scoreboard\\Resources\\Output\\player2.txt");
    File p1FullFile = new File("C:\\Scoreboard\\Resources\\Output\\player1Full.txt");
    File p2FullFile = new File("C:\\Scoreboard\\Resources\\Output\\player2Full.txt");
    File p1SponsorFile = new File("C:\\Scoreboard\\Resources\\Output\\sponsor1.txt");
    File p2SponsorFile = new File("C:\\Scoreboard\\Resources\\Output\\sponsor2.txt");
    File p1TwitterFile = new File("C:\\Scoreboard\\Resources\\Output\\twitter1.txt");
    File p2TwitterFile = new File("C:\\Scoreboard\\Resources\\Output\\twitter2.txt");
    File roundFile = new File("C:\\Scoreboard\\Resources\\Output\\round.txt");
    File score1File = new File("C:\\Scoreboard\\Resources\\Output\\score1.txt");
    File score2File = new File("C:\\Scoreboard\\Resources\\Output\\score2.txt");
    File caster1File = new File("C:\\Scoreboard\\Resources\\Output\\caster1.txt");
    File caster2File = new File("C:\\Scoreboard\\Resources\\Output\\caster2.txt");
    File casterTwitter1File = new File("C:\\Scoreboard\\Resources\\Output\\casterTwitter1.txt");
    File casterTwitter2File = new File("C:\\Scoreboard\\Resources\\Output\\casterTwitter2.txt");

    private javax.swing.JComboBox<Player> cmbPlayer1 = new JComboBox<Player>();
    private javax.swing.JComboBox<Player> cmbPlayer2 = new JComboBox<Player>();
    private javax.swing.JComboBox<Player> cmbCaster1 = new JComboBox<Player>();
    private javax.swing.JComboBox<Player> cmbCaster2 = new JComboBox<Player>();

    public List<Player> getPlayerList() {
        return playerList;
    }

    public void setPlayerList(List<Player> playerList) {
        this.playerList = playerList;
    }

    /**
     * Creates new form Scoreboard
     */
    public Scoreboard() {
        initComponents();
        iniciation();
    }

    private void iniciation() {
        try {
            setIcon();
            initFiles();
        } catch (IOException ex) {
            Logger.getLogger(Scoreboard.class.getName()).log(Level.SEVERE, null, ex);
        }

        createComboBoxes();

        setLocationRelativeTo(null);

        loadPlayersFile();

        autocomplete();

        fillTwitter(txtTwitter1, cmbPlayer1);
        fillSponsor(txtSponsor1, cmbPlayer1);
        fillTwitter(txtTwitter2, cmbPlayer2);
        fillSponsor(txtSponsor2, cmbPlayer2);
        fillTwitter(txtCasterTwitter1, cmbCaster1);
        fillTwitter(txtCasterTwitter2, cmbCaster2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrPlayer1 = new javax.swing.JScrollPane();
        txtSponsor1 = new javax.swing.JTextField();
        scrCharacter1 = new javax.swing.JScrollPane();
        txtTwitter1 = new javax.swing.JTextField();
        spnScore1 = new javax.swing.JSpinner();
        tglLoser1 = new javax.swing.JToggleButton();
        btnSwapPlayers = new javax.swing.JButton();
        txtSponsor2 = new javax.swing.JTextField();
        txtTwitter2 = new javax.swing.JTextField();
        scrPlayer2 = new javax.swing.JScrollPane();
        scrCharacter2 = new javax.swing.JScrollPane();
        spnScore2 = new javax.swing.JSpinner();
        tglLoser2 = new javax.swing.JToggleButton();
        spr1 = new javax.swing.JSeparator();
        txtTournamentName = new javax.swing.JTextField();
        btnWL = new javax.swing.JButton();
        cmbRound = new javax.swing.JComboBox<>();
        spr2 = new javax.swing.JSeparator();
        lblMicIcon1 = new javax.swing.JLabel();
        txtCasterTwitter1 = new javax.swing.JTextField();
        scrCaster1 = new javax.swing.JScrollPane();
        btnSwapCasters = new javax.swing.JButton();
        lblMicIcon2 = new javax.swing.JLabel();
        scrCaster2 = new javax.swing.JScrollPane();
        txtCasterTwitter2 = new javax.swing.JTextField();
        lblTwitterIcon1 = new javax.swing.JLabel();
        lblTwitterIcon2 = new javax.swing.JLabel();
        lblTwitterIcon3 = new javax.swing.JLabel();
        lblTwitterIcon4 = new javax.swing.JLabel();
        lblPreview = new javax.swing.JLabel();
        lblOutput = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuOpenFolder = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnuUpdate = new javax.swing.JMenuItem();
        mnuResetScore = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        mnuEditPlayerList = new javax.swing.JMenuItem();
        mnuP1win = new javax.swing.JMenuItem();
        mnuP2win = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        mnuTutorial = new javax.swing.JMenuItem();
        mnuGithub = new javax.swing.JMenuItem();
        mnuAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scoreboard manager");

        txtSponsor1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        spnScore1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3, 1));

        tglLoser1.setText("L");
        tglLoser1.setEnabled(false);
        tglLoser1.setFocusable(false);

        btnSwapPlayers.setText("↔");
        btnSwapPlayers.setFocusable(false);
        btnSwapPlayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSwapPlayersActionPerformed(evt);
            }
        });

        txtSponsor2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        spnScore2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3, 1));

        tglLoser2.setText("L");
        tglLoser2.setEnabled(false);
        tglLoser2.setFocusable(false);

        txtTournamentName.setText("Tournament saga");
        txtTournamentName.setToolTipText("Tournament name");

        btnWL.setText("Winners");
        btnWL.setFocusable(false);
        btnWL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWLActionPerformed(evt);
            }
        });

        cmbRound.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Round 1", "Round 2", "Round 3", "Round 4", "Top 8", "Top 4", "Quarters", "Semis", "Final", "Grand Final", "Money Match", "Pools" }));
        cmbRound.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbRoundItemStateChanged(evt);
            }
        });

        lblMicIcon1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scoreboard/resources/icons/mic.png"))); // NOI18N

        btnSwapCasters.setText("↔");
        btnSwapCasters.setFocusable(false);
        btnSwapCasters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSwapCastersActionPerformed(evt);
            }
        });

        lblMicIcon2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scoreboard/resources/icons/mic.png"))); // NOI18N

        lblTwitterIcon1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scoreboard/resources/icons/twitter.png"))); // NOI18N

        lblTwitterIcon2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scoreboard/resources/icons/twitter.png"))); // NOI18N

        lblTwitterIcon3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scoreboard/resources/icons/twitter.png"))); // NOI18N

        lblTwitterIcon4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scoreboard/resources/icons/twitter.png"))); // NOI18N

        lblPreview.setText("Preview: ");

        lblOutput.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblOutput.setText("No match started yet...");

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        mnuOpenFolder.setText("Open output folder...");
        mnuOpenFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOpenFolderActionPerformed(evt);
            }
        });
        jMenu1.add(mnuOpenFolder);
        jMenu1.add(jSeparator1);

        mnuExit.setText("Exit");
        mnuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExitActionPerformed(evt);
            }
        });
        jMenu1.add(mnuExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        mnuUpdate.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, 0));
        mnuUpdate.setText("Update");
        mnuUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuUpdateActionPerformed(evt);
            }
        });
        jMenu2.add(mnuUpdate);

        mnuResetScore.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        mnuResetScore.setText("Reset score");
        mnuResetScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuResetScoreActionPerformed(evt);
            }
        });
        jMenu2.add(mnuResetScore);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Scoreboard");

        mnuEditPlayerList.setText("Edit player list...");
        mnuEditPlayerList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEditPlayerListActionPerformed(evt);
            }
        });
        jMenu3.add(mnuEditPlayerList);

        mnuP1win.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        mnuP1win.setText("Player 1 win");
        mnuP1win.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuP1winActionPerformed(evt);
            }
        });
        jMenu3.add(mnuP1win);

        mnuP2win.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        mnuP2win.setText("Player 2 win");
        mnuP2win.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuP2winActionPerformed(evt);
            }
        });
        jMenu3.add(mnuP2win);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Help");

        mnuTutorial.setText("Tutorial");
        jMenu4.add(mnuTutorial);

        mnuGithub.setText("Github page");
        mnuGithub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGithubActionPerformed(evt);
            }
        });
        jMenu4.add(mnuGithub);

        mnuAbout.setText("About");
        mnuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAboutActionPerformed(evt);
            }
        });
        jMenu4.add(mnuAbout);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spr2)
                    .addComponent(spr1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSponsor1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scrPlayer1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(lblTwitterIcon1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTwitter1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrCharacter1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tglLoser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spnScore1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSwapPlayers)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tglLoser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spnScore2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrCharacter2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSponsor2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scrPlayer2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(lblTwitterIcon2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTwitter2))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTournamentName, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnWL, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbRound, 0, 273, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMicIcon1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrCaster1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(lblTwitterIcon3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCasterTwitter1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSwapCasters, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrCaster2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(lblTwitterIcon4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCasterTwitter2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMicIcon2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPreview)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spnScore2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tglLoser2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSponsor2)
                            .addComponent(scrPlayer2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTwitter2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTwitterIcon2)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spnScore1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tglLoser1))
                    .addComponent(scrCharacter1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSponsor1)
                            .addComponent(scrPlayer1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTwitterIcon1)
                            .addComponent(txtTwitter1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnSwapPlayers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrCharacter2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spr1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTournamentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnWL)
                    .addComponent(cmbRound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spr2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrCaster1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCasterTwitter1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblTwitterIcon3))))
                    .addComponent(lblMicIcon1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSwapCasters, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMicIcon2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrCaster2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCasterTwitter2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTwitterIcon4, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPreview)
                    .addComponent(lblOutput))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuUpdateActionPerformed
        update();
    }//GEN-LAST:event_mnuUpdateActionPerformed

    private void mnuResetScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuResetScoreActionPerformed
        resetScore();
    }//GEN-LAST:event_mnuResetScoreActionPerformed

    private void mnuP1winActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuP1winActionPerformed
        spnScore1.setValue(spnScore1.getNextValue());
    }//GEN-LAST:event_mnuP1winActionPerformed

    private void mnuP2winActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuP2winActionPerformed
        spnScore2.setValue(spnScore2.getNextValue());
    }//GEN-LAST:event_mnuP2winActionPerformed

    private void mnuOpenFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOpenFolderActionPerformed
        openFolder();
    }//GEN-LAST:event_mnuOpenFolderActionPerformed

    private void btnSwapPlayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSwapPlayersActionPerformed
        swapPlayers();
    }//GEN-LAST:event_btnSwapPlayersActionPerformed

    private void btnWLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWLActionPerformed
        wl();
    }//GEN-LAST:event_btnWLActionPerformed

    private void btnSwapCastersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSwapCastersActionPerformed
        swapCasters();
    }//GEN-LAST:event_btnSwapCastersActionPerformed

    private void cmbRoundItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbRoundItemStateChanged
        if (cmbRound.getSelectedItem().toString().equals("Grand Final")) {
            tglLoser1.setEnabled(true);
            tglLoser2.setEnabled(true);
            btnWL.setEnabled(false);
        } else {
            tglLoser1.setEnabled(!true);
            tglLoser2.setEnabled(!true);
            tglLoser1.setSelected(false);
            tglLoser1.setSelected(false);
            btnWL.setEnabled(!false);
        }
    }//GEN-LAST:event_cmbRoundItemStateChanged

    private void mnuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExitActionPerformed
        System.exit(1);
    }//GEN-LAST:event_mnuExitActionPerformed

    private void mnuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAboutActionPerformed
        JOptionPane.showMessageDialog(this, "Scoreboard manager by @2EZPinkAplier v1.0");
    }//GEN-LAST:event_mnuAboutActionPerformed

    private void mnuGithubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGithubActionPerformed
        if (Desktop.isDesktopSupported() && Desktop.getDesktop().isSupported(Desktop.Action.BROWSE)) {
            try {
                Desktop.getDesktop().browse(new URI("https://github.com/AlejoPinto01/Scoreboard"));
            } catch (URISyntaxException ex) {
                Logger.getLogger(Scoreboard.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Scoreboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_mnuGithubActionPerformed

    private void mnuEditPlayerListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEditPlayerListActionPerformed
        PlayerList pl = new PlayerList(this, true);
        pl.setVisible(true);
        loadPlayersFile();
    }//GEN-LAST:event_mnuEditPlayerListActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        update();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void p1StateChanged(java.awt.event.ItemEvent evt) {
        fillTwitter(txtTwitter1, cmbPlayer1);
        fillSponsor(txtSponsor1, cmbPlayer1);
    }

    private void p2StateChanged(java.awt.event.ItemEvent evt) {
        fillTwitter(txtTwitter2, cmbPlayer2);
        fillSponsor(txtSponsor2, cmbPlayer2);
    }

    private void c1StateChanged(java.awt.event.ItemEvent evt) {
        fillTwitter(txtCasterTwitter1, cmbCaster1);
    }

    private void c2StateChanged(java.awt.event.ItemEvent evt) {
        fillTwitter(txtCasterTwitter2, cmbCaster2);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Scoreboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Scoreboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Scoreboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scoreboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Scoreboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSwapCasters;
    private javax.swing.JButton btnSwapPlayers;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnWL;
    private javax.swing.JComboBox<String> cmbRound;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lblMicIcon1;
    private javax.swing.JLabel lblMicIcon2;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JLabel lblPreview;
    private javax.swing.JLabel lblTwitterIcon1;
    private javax.swing.JLabel lblTwitterIcon2;
    private javax.swing.JLabel lblTwitterIcon3;
    private javax.swing.JLabel lblTwitterIcon4;
    private javax.swing.JMenuItem mnuAbout;
    private javax.swing.JMenuItem mnuEditPlayerList;
    private javax.swing.JMenuItem mnuExit;
    private javax.swing.JMenuItem mnuGithub;
    private javax.swing.JMenuItem mnuOpenFolder;
    private javax.swing.JMenuItem mnuP1win;
    private javax.swing.JMenuItem mnuP2win;
    private javax.swing.JMenuItem mnuResetScore;
    private javax.swing.JMenuItem mnuTutorial;
    private javax.swing.JMenuItem mnuUpdate;
    private javax.swing.JScrollPane scrCaster1;
    private javax.swing.JScrollPane scrCaster2;
    private javax.swing.JScrollPane scrCharacter1;
    private javax.swing.JScrollPane scrCharacter2;
    private javax.swing.JScrollPane scrPlayer1;
    private javax.swing.JScrollPane scrPlayer2;
    private javax.swing.JSpinner spnScore1;
    private javax.swing.JSpinner spnScore2;
    private javax.swing.JSeparator spr1;
    private javax.swing.JSeparator spr2;
    private javax.swing.JToggleButton tglLoser1;
    private javax.swing.JToggleButton tglLoser2;
    private javax.swing.JTextField txtCasterTwitter1;
    private javax.swing.JTextField txtCasterTwitter2;
    private javax.swing.JTextField txtSponsor1;
    private javax.swing.JTextField txtSponsor2;
    private javax.swing.JTextField txtTournamentName;
    private javax.swing.JTextField txtTwitter1;
    private javax.swing.JTextField txtTwitter2;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/scoreboard/resources/icons/icon.png")));
    }

    private void initFiles() throws IOException {
        if (!outputFolder.exists()) {
            outputFolder.mkdirs();
        }
        if (!inputFolder.exists()) {
            inputFolder.mkdirs();
        }
        if (!playersFile.exists()) {
            playersFile.createNewFile();
        }
        if (!p1File.exists()) {
            p1File.createNewFile();
        }
        if (!p2File.exists()) {
            p2File.createNewFile();
        }
        if (!p1SponsorFile.exists()) {
            p1SponsorFile.createNewFile();
        }
        if (!p2SponsorFile.exists()) {
            p2SponsorFile.createNewFile();
        }
        if (!p1TwitterFile.exists()) {
            p1TwitterFile.createNewFile();
        }
        if (!p2TwitterFile.exists()) {
            p2TwitterFile.createNewFile();
        }
        if (!roundFile.exists()) {
            roundFile.createNewFile();
        }
        if (!score1File.exists()) {
            score1File.createNewFile();
        }
        if (!score2File.exists()) {
            score2File.createNewFile();
        }
    }

    private void loadPlayersFile() {
        BufferedReader br = null;
        try {
            String curLine;
            br = new BufferedReader(new FileReader(playersFile));
            playerList.clear();
            while ((curLine = br.readLine()) != null) {
                String[] playerInfo = curLine.split(",");
                Player p = new Player(playerInfo[0], playerInfo[1], playerInfo[2], playerInfo[3].equals("true"));
                playerList.add(p);
            }
        } catch (FileNotFoundException fnfe) {
            System.err.println("File not found");
        } catch (IndexOutOfBoundsException ofBoundsException) {
            System.err.println("No users saved");
        } catch (IOException ex) {
            Logger.getLogger(Scoreboard.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                br.close();
            } catch (IOException ex) {
                Logger.getLogger(Scoreboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        sortPlayers();
        
        loadPlayers();
        loadCasters();
    }

    private void autocomplete() {
        AutoCompleteDecorator.decorate(cmbPlayer1);
        AutoCompleteDecorator.decorate(cmbPlayer2);
        AutoCompleteDecorator.decorate(cmbCaster2);
        AutoCompleteDecorator.decorate(cmbCaster2);
    }

    private void loadCasters() {
        DefaultComboBoxModel<Player> playersComboBoxModel1 = new DefaultComboBoxModel<Player>();
        DefaultComboBoxModel<Player> playersComboBoxModel2 = new DefaultComboBoxModel<Player>();
        for (Player player : playerList) {
            if (player.isCaster()) {
                playersComboBoxModel1.addElement(player);
                playersComboBoxModel2.addElement(player);
            }
        }
        cmbCaster1.setModel(playersComboBoxModel1);
        cmbCaster2.setModel(playersComboBoxModel2);
    }

    private void loadPlayers() {
        DefaultComboBoxModel<Player> playersComboBoxModel1 = new DefaultComboBoxModel<Player>();
        DefaultComboBoxModel<Player> playersComboBoxModel2 = new DefaultComboBoxModel<Player>();
        for (Player player : playerList) {
            playersComboBoxModel1.addElement(player);
            playersComboBoxModel2.addElement(player);
        }
        cmbPlayer1.setModel(playersComboBoxModel1);
        cmbPlayer2.setModel(playersComboBoxModel2);
    }

    private void createComboBoxes() {
        scrPlayer1.setViewportView(cmbPlayer1);
        scrPlayer2.setViewportView(cmbPlayer2);
        scrCaster1.setViewportView(cmbCaster1);
        scrCaster2.setViewportView(cmbCaster2);
        cmbPlayer1.setEditable(true);
        cmbPlayer2.setEditable(true);
        cmbCaster1.setEditable(true);
        cmbCaster2.setEditable(true);

        cmbPlayer1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                p1StateChanged(evt);
            }
        });

        cmbPlayer2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                p2StateChanged(evt);
            }
        });

        cmbCaster1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                c1StateChanged(evt);
            }
        });

        cmbCaster2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                c2StateChanged(evt);
            }
        });
    }

    private void resetScore() {
        spnScore1.setValue(0);
        spnScore2.setValue(0);
    }

    private void update() {
        sponsor1 = txtSponsor1.getText() + "|";
        sponsor2 = txtSponsor2.getText() + "|";
        player1 = sponsor1.equals("|") ? cmbPlayer1.getSelectedItem().toString() : sponsor1 + cmbPlayer1.getSelectedItem().toString();
        player2 = sponsor2.equals("|") ? cmbPlayer2.getSelectedItem().toString() : sponsor2 + cmbPlayer2.getSelectedItem().toString();
        round = btnWL.isEnabled() ? btnWL.getText() + " " + cmbRound.getSelectedItem().toString() : cmbRound.getSelectedItem().toString();

        write(p1FullFile, player1);
        write(p2FullFile, player2);
        write(p1File, cmbPlayer1.getSelectedItem().toString());
        write(p2File, cmbPlayer2.getSelectedItem().toString());
        write(p1SponsorFile, txtSponsor1.getText());
        write(p2SponsorFile, txtSponsor2.getText());
        write(p1TwitterFile, txtTwitter1.getText());
        write(p2TwitterFile, txtTwitter2.getText());
        write(caster1File, cmbCaster1.getSelectedItem().toString());
        write(caster2File, cmbCaster2.getSelectedItem().toString());
        write(casterTwitter1File, txtCasterTwitter1.getText());
        write(casterTwitter2File, txtCasterTwitter2.getText());
        write(score1File, spnScore1.getValue().toString());
        write(score2File, spnScore2.getValue().toString());
        write(roundFile, round);
        
        lblOutput.setText(txtTournamentName.getText() + " - " + player1 + " vs " + player2 + " - " + round);
    }

    private void openFolder() {
        try {
            Desktop.getDesktop().open(outputFolder);
        } catch (IOException ex) {
            Logger.getLogger(Scoreboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void swapPlayers() {
        int i = cmbPlayer1.getSelectedIndex();
        cmbPlayer1.setSelectedIndex(cmbPlayer2.getSelectedIndex());
        cmbPlayer2.setSelectedIndex(i);
        int j = (int) spnScore1.getValue();
        spnScore1.setValue(spnScore2.getValue());
        spnScore2.setValue(j);
        if ((tglLoser1.isSelected() && !tglLoser2.isSelected()) || (!tglLoser1.isSelected() && tglLoser2.isSelected())) {
            tglLoser1.setSelected(!tglLoser1.isSelected());
            tglLoser2.setSelected(!tglLoser2.isSelected());
        }
    }

    private void wl() {
        if (btnWL.getText().equals("Winners")) {
            btnWL.setText("Losers");
        } else {
            btnWL.setText("Winners");
        }
    }

    private void swapCasters() {
        int i = cmbCaster1.getSelectedIndex();
        cmbCaster1.setSelectedIndex(cmbCaster2.getSelectedIndex());
        cmbCaster2.setSelectedIndex(i);
    }

    public void write(File file, String content) {
        try {
            BufferedWriter bf = new BufferedWriter(new FileWriter(file));
            bf.write(content);
            bf.close();
        } catch (IOException ex) {
            Logger.getLogger(Scoreboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fillTwitter(JTextField textField, JComboBox<Player> comboBox) {
        try {
            Player p = (Player) comboBox.getSelectedItem();
            textField.setText(p.getTwitter());
        } catch (ClassCastException cce) {
            System.err.println("error de mierda que no debería estar");
        }
    }

    private void fillSponsor(JTextField textField, JComboBox<Player> comboBox) {
        try {
            Player p = (Player) comboBox.getSelectedItem();
            textField.setText(p.getSponsor());
        } catch (ClassCastException cce) {
            System.err.println("error de mierda que no debería estar");
        }
    }

    private void sortPlayers() {
        Collections.sort(playerList, new Comparator<Player>() {
            public int compare(Player v1, Player v2) {
                return v1.getNickname().compareTo(v2.getNickname());
            }
        });
        writePlayersFile();
    }
    
    private void writePlayersFile() {
        BufferedWriter bw = null;
        try {
            bw = new BufferedWriter(new FileWriter(playersFile));
            for (Player player : playerList) {
                bw.write(player.toCSV());
            }
        } catch (IOException ex) {
            Logger.getLogger(Scoreboard.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                bw.close();
            } catch (IOException ex) {
                Logger.getLogger(Scoreboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
